10
9
8
info()
skip()
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
?IMPAGE
?imapge
?image
datamatrix <- matrix(1:400. nrow = 40)
datamatrix <- matrix(rnorm(400), nrow = 40)
heatmap(datamatrix)
as.dendrogram(datamatrix)
rm(list = ls())
rbinom(1, size = 1, prob = 1)
rep(c(0,3), each = 5)
dataMatrix <- matrix(rnorm(400), nrow = 40)
heatmap(dataMatrix)
dataMatrix <- matrix(rnorm(400), nrow = 40)
for(i in 1:40){
coinflip <- rbinom(1, size = 1, prob = 0.5)
if(coinflip){
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0,3), each = 5)
}
}
heatmap(dataMatrix)
dataMatrix
hh <- hclust(dist(dataMatrix))
dataMatrixorder <- dataMatrix[hh, ]
hh
dataMatrixorder <- dataMatrix[hh$order, ]
heatmap(dataMatrixorder)
dataMatrixorder
?svd
scale(dataMatrixorder)
?scale
svd1 <- svd(scale(dataMatrixorder))
svd1
par(mfrow = c(1,3))
heatmap(dataMatrixorder)
plot(svd1$u)
par(mfrow = c(1,3))
heatmap(dataMatrixorder)
plot(svd1$u)
plot(svd1$v)
heatmap(dataMatrixorder)
plot(svd1$u)
plot(svd1$u)
plot(svd1$u, 40:1)
plot(svd1$u[, 1], 40:1)
40:1
plot(svd1$u[, 1], 1:40)
load("IMG_5799.JPG")
library(swirl)
swirl()
cmat
points(cx, cy, col = c("red", "orange", "purple", pch = 3, cex = 2, lwd = 2))
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch =19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, lwd = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y , col = kmean(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y , col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y , col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y , col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap
heatmpa(dataMatrix)
heatmaps(dataMatrix)
heatmap(dataMatrix)
muedit("addPatt.R")
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[, 1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2
svd2$v[. 1:2]
svd2$v[, 1:2]
svd2$d
dim(faceData)
a1 <- svd1$u
a1 <- (svd1$u[, 1] * svd1$d[1]) %*% svd1$v[, 1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[, 1:2] %*% t(svd1$v[, 1:2]) * svd1$d[, 1:2]
a2 <- svd1$u[, 1:2] %*% t(svd1$v[, 1:2]) * svd1$d[1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
0
bye()
swirl()
dim(ssd)
names(ssd[, 562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[, 1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$subject))
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[, 2])
mdist <- dist(sub1[, c(maxCon,10:12]))
mdist <- dist(sub1[, c(maxCon,10:12)])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxcon])
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying CLuster")
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="walkdown Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
0
skip()
info()
main()
dim(pm0)
head(pm0)
cnames
strsplit(cnames, "|", fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
play()
?strsplit
info()
nxt()
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
play()
?make.names
nxt()
x0 <- pm0$Sample.Value
str(x0)
mean(x0, is.na(x0))
mean(is.na(xo))
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]]wcol)
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(dates, "%Y%m%d")
dates <- as.Date(dates, "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
play()
head(dates)
head(negative)
head(dates[negative])
tail(dates[negative])
nxt()
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site == both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site))
sapply(split(cnt0, cnt0$county.site), nrow)
play()
table(cnt0$county.site)
nxt()
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x01sub <- pm1sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub), lwd = 2, na.rm = TRUE)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, s1sub, na.rm = TRUE)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
mn0
str(mno)
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str9mn1
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, set = "state")
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[, 3]))
segments(,y )
segments(x,y )
segments(rep(1,52), mrg[, 2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y, ]
install.packages("kernlab")
library(kernlab)
data(spam)
str(spam)
View(spam)
trainindicator <- rbinom(4061, size = 1, prob = 0.5)
table(trainindicator)
trainindicator <- rbinom(4601, size = 1, prob = 0.5)
table(trainindicator)
trainspam <- spam[trainindicator == 1, ]
View(trainspam)
testspam <- spam[trainindicator == 0, ]
View(testspam)
trainindicator == 1
names(trainspam)
table(trainspam$type)
plot(trainspam$business ~ trainspam$type)
table(trainspam$business)
plot(trainspam$business ~ trainspam$type, alpha = 0.5)
plot(trainspam$business ~ trainspam$type, alpha = 0.04)
plot(trainspam$capitalAve ~ trainspam$type)
plot(log(trainspam$capitalAve) ~ log(trainspam$type))
plot(log(trainspam$capitalAve) ~ trainspam$type)
plot(log(trainspam$capitalAve + 1) ~ trainspam$type)
hcluster <- hclust(dist(trainspam[, 1:57]))
plot(hclust)
hcluster <- hclust(dist(t(trainspam[, 1:57])))
plot(hclust)
plot(hcluster)
hcluster <- hclust(dist(trainspam[, 1:57]))
plot(hcluster)
hclusterupdated <- hclust(dist(t(log10(trainspam[, 1:55]))))
hclusterupdated <- hclust(dist(t(log(trainspam[, 1:55]))))
hclusterupdated <- hclust(dist(t(log(trainspam[, 1:55] + 1))))
plot(hclusterupdated)
rm(list =ls())
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
r <- rnorm(100, 2, 4)
r
c <- rnorm(100, 4, 2)
df <- data.frame(r, c)
df
kmeansobj <- kmeans(df, centers = 4)
kmeansobj
plot(r, c, col = kmeansobj$cluster, pch = 19, cex = 2)
plot(hclust(dist(r,c)))
dist <- dist(df)
dist
dist
hclust <- hclust(dist)
plot(hclust)
plot(df)
dist
dist
r <- rnorm(10, 4,2)
c <- rnorm(10, 2, 4)
dist(data.frame(r,c))
plot(hist(dist(data.frame(r,c))))
plot(hclust(dist(data.frame(r,c))))
plot(dist(data.frame(r,c)))
r
c
plot(r)
plot(c)
hclust(dist(data.frame(r,c)))
r <- rnorm(5, 1,1)
c <- rnorm(5,1,1)
plot(r)
plot(c)
dist(data.frame(r,c))
r
c
?dist
plot(hclust(dist(data.frame(r,c)))
)
df <- data.frame(r,c)
df
km <- kmeans(df, centers = 3)
plot(r,c, col = km$cluster, pch = 19)
rm(list = ls())
r <- rnorm(10, 1,1)
c <- rnorm(10,1,1)
df <- data.frame(r,c)
df
dis <- dist(r,c)
dis <- dist(df)
dis
hclust <- hclust(dis)
plot(hclust)
plot(r,c,col = "blue", pch = 19)
text(x,y,labels = as.character(1:10))
text(r,c,labels = as.character(1:10))
plot(hclust)
plot(hclust)
?echo
setwd("~/RepData_PeerAssessment1")
unzip("activity.zip")
activity <- read.csv("activity.csv")
str(activity)
?as.Date
activity$date <- as.Date(activity$date, "%Y %d %m")
str(activity)
activity$date <- as.Date(activity$date, "%Y %m %d")
str(activity)
activity <- read.csv("activity.csv")
str(activity)
activity$date <- as.Date(activity$date, "%Y %m %d")
str(activity)
activity <- read.csv("activity.csv")
str(activity)
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
ag <- aggregate(steps ~ date, data = activity)
ag <- aggregate(steps ~ date, data = activity, sum)
ag
hist(ag$steps)
hist(ag$steps, col = "gray")
barplot(height = ag$steps, col = "grey")
mean(ag$steps)
mean(ag$steps, na.rm = TRUE)
median(ag$steps)
activitypt <- aggregate(steps ~ interval, data = activity, sum)
activitypt
plot(activitypt$interval, activitypt$steps)
plot(activitypt$interval, activitypt$steps, type = "l")
activitypt <- aggregate(steps ~ interval, data = activity, mean)
plot(activitypt$interval, activitypt$steps, type = "l")
activitypt
head(activity)
sum(is.na(activity$steps))
act <- activity
act[act$steps == NA] <- mean(act$steps)
act[act$steps == NA, ] <- mean(act$steps)
act[act == NA] <- mean(act$steps)
View(act)
View(activity)
act$steps[act$steps == NA] <- mean(act$steps)
View(act)
act$steps
which(is.na(act$steps))
?impute
??impute
View(act)
for(i in which(is.na(act$steps))){
actmean <- rep(mean(act$interval), times = length(is.na(act$steps)))
act$steps <- actmean
}
act <- activity
for(i in which(is.na(act$steps))){
actmean <- rep(mean(act$interval), times = length(is.na(act$steps)))
act[i, steps] <- actmean
}
for(i in which(is.na(act$steps))){
actmean <- rep(mean(act$interval), times = length(is.na(act$steps)))
act[i, "steps"] <- actmean
}
for(i in which(is.na(act$steps))){
actmean <- rep(mean(act$interval, na.rm = TRUE),
times = length(is.na(act$steps)))
act[i, "steps"] <- actmean
}
napos <- which(is.na(act$steps))
actmean <- rep(mean(act$interval, na.rm = TRUE),
times = length(is.na(act$steps)))
act[napos, "steps"] <- actmean
length(is.na(act$steps))
napos <- which(is.na(act$steps))
actmean <- rep(mean(act$interval, na.rm = TRUE),
times = which(length(is.na(act$steps))))
act[napos, "steps"] <- actmean
napos <- which(is.na(act$steps))
actmean <- rep(mean(act$interval, na.rm = TRUE),
times = length(napos)
act[napos, "steps"] <- actmean
napos <- which(is.na(act$steps))
actmean <- rep(mean(act$interval, na.rm = TRUE),
times = length(napos))
act[napos, "steps"] <- actmean
table(act$steps)
napos <- which(is.na(act$steps))
actmean <- rep(mean(act$steps, na.rm = TRUE),
times = length(napos))
act[napos, "steps"] <- actmean
View(act)
act <- activity
napos <- which(is.na(act$steps))
actmean <- rep(mean(act$steps, na.rm = TRUE),
times = length(napos))
act[napos, "steps"] <- actmean
View(act)
View(activity)
weekdays(activity$date)
weekdays(2012-10-01)
weekdays("2012-10-01")
str(activity)
if(weekdays(act$date) == c("Saturday", "Sunday")){
act$daytype <- "Weekend"
}
else
act$daytype <- "Weekday"
if(weekdays(act$date) == c("Saturday", "Sunday")){
act$daytype <- "Weekend"
}
else{
act$daytype <- "Weekday"
}
"%in%
""
?%in%
if(weekdays(act$date) %in% c("Saturday", "Sunday")){
act$daytype <- "Weekend"
}
else{
act$daytype <- "Weekday"
}
View(act)
?ifelse
?if
else
ifelse(weekdays(act$date) %in% c("Saturday", "Sunday")
act$daytype <- "Weekend", "Weekday")
act$daytype <- ifelse(weekdays(act$date) %in% c("Saturday", "Sunday"),
"Weekend", "Weekday")
View(act)
library(lattice)
?xyplot
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("Report_markdown.Rmd")
render_html("PA1_template.Rmd")
?render_html
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
?rmarkdown::render()
knit2html("PA1_template.Rmd")
knit("PA1_template.Rmd")
kniit2html("PA1_template.md")
knit2html("PA1_template.md")
library(rmarkdown)
render("PA1_template.Rmd")
